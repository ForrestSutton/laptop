#!/usr/bin/env zsh

successfully() {
  $* || (echo "failed" 1>&2 && exit 1)
}

echo "This script will setup your laptop for development in Ruby on Rails."
echo "It can be run multiple times without any harm."
echo
echo -n "Press any key to start: " && read

echo "Checking for SSH key, generating one if it doesn't exist ..."
  [[ -f ~/.ssh/id_rsa.pub ]] || ssh-keygen -t rsa

echo "Copying public key to clipboard... "
echo
echo "Now I'm about to open the browser so you can paste it into GitHub."
echo -n "Press any key to open the browser: " && read
  successfully cat ~/.ssh/id_rsa.pub | pbcopy
  successfully open https://github.com/account/ssh
  echo "Great! Let's continue ..."
  echo

echo "Fixing permissions ..."
  successfully sudo mkdir -p /usr/local
  successfully sudo chown -R `whoami` /usr/local
  echo

echo "Installing Homebrew, a good OS X package manager ..."
  successfully ruby <(curl -fsS https://raw.github.com/mxcl/homebrew/go)
  successfully brew update
  echo

echo "Putting Homebrew location earlier in PATH ..."
  if grep -qs "recommended by brew doctor" ~/.zshenv; then
    echo 'Path change already exists for zshenv'
  else
    successfully echo '
    # recommended by brew doctor
    export PATH="/usr/local/bin:$PATH"' >> ~/.zshenv
    successfully source ~/.zshenv
  fi

echo "Installing GNU Compiler Collection and dependencies ..."
  successfully brew tap homebrew/dupes
  successfully brew install autoconf automake apple-gcc42
  echo

echo "Installing system libraries recommended for Ruby ..."
  successfully brew install gdbm libffi libksba libyaml
  echo

echo "Installing Postgres, a good open source relational database ..."
  successfully brew install postgres --no-python
  successfully initdb /usr/local/var/postgres -E utf8
  echo

echo "Installing Redis, a good key-value database ..."
  successfully brew install redis
  echo

echo "Installing The Silver Searcher (better than ack or grep) for searching the contents of files ..."
  successfully brew install the_silver_searcher
  echo

echo "Installing ctags, for indexing files for vim tab completion of methods, classes, variables ..."
  successfully brew install ctags
  echo

echo "Installing tmux, for saving project state and switching between projects ..."
  successfully brew install tmux
  echo

echo "Installing reattach-to-user-namespace, for copy-paste and RubyMotion compatibility with tmux ..."
  successfully brew install reattach-to-user-namespace
  echo

echo "Installing ImageMagick, for cropping and re-sizing images ..."
  successfully brew install imagemagick

echo "Installing QT, used by Capybara Webkit for headless Javascript integration testing ..."
  successfully brew install qt
  echo

echo "Installing watch, used to execute a program periodically and show the output ..."
  successfully brew install watch
  echo

echo "Installing rbenv for changing Ruby versions ..."
  successfully brew install rbenv

  if grep -qs "rbenv init" ~/.zlogin; then
    echo "rbenv init already added to ~/.zlogin."
  else
    successfully echo 'eval "$(rbenv init -)"' >> ~/.zlogin
  fi

  successfully source ~/.zlogin
  echo

echo "Installing rbenv-gem-rehash so the shell automatically picks up binaries after installing gems with binaries..."
  successfully brew install rbenv-gem-rehash
  echo

echo "Installing ruby-build for installing Rubies ..."
  successfully brew install ruby-build
  echo

echo "Installing Ruby 1.9.3-p392 ..."
  CC=gcc-4.2 successfully rbenv install 1.9.3-p392
  echo

echo "Setting Ruby 1.9.3-p392 as global default Ruby ..."
  successfully rbenv global 1.9.3-p392
  successfully rbenv shell 1.9.3-p392
  echo

echo "Update to latest Rubygems version ..."
  successfully gem update --system
  echo

echo "Installing critical Ruby gems for Rails development ..."
  successfully gem install bundler foreman pg rails thin --no-document
  echo

echo "Installing GitHub CLI client ..."
  successfully gem install hub --no-document
  echo

echo "Installing Heroku CLI client ..."
  successfully brew install heroku-toolbelt
  echo

echo "Installing the heroku-config plugin for pulling config variables locally to be used as ENV variables ..."
  successfully heroku plugins:install git://github.com/ddollar/heroku-config.git
  echo

echo "If you'd like to start Postgres on boot, 'brew info postgres' and follow"
echo "the instructions. Same goes for Redis (brew info redis)."
echo
echo -n "Hit return and your shell will restart to apply changes." && read
  exec $SHELL -l
